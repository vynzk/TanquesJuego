@startuml

Proyectil <|-- Bloque
Main o-- Director
Main o-- EscenaHome
Main o-- Juego
Main o-- EscenaJuego
Juego o-- Jugador
Juego o-- Partida
Juego o-- Tanque
Tanque o-- Bloque
Tanque o-- Proyectil
Proyectil o-- Bloque
Mapa o-- Bloque
EscenaRegistro o-- Escena
EscenaRegistro o-- Boton
EscenaRegistro o-- EscenaJuego
EscenaMenu1 o-- Escena
EscenaJuego o-- Partida
EscenaJuego o-- plantillaEscena
EscenaJuego o-- Bloque
EscenaJuego o-- Mapa
EscenaHome o-- EscenaRegistro
EscenaHome o-- Escena
EscenaHome o-- Boton


class Main{
+main()
}

class Partida{
+id
+estado
+pantalla
+jugadorGanador
+contadorJugador
+ArrayList<jugadoresActivos>
+agregarJugadores(jugador)
+terminar()
+eliminarJugador(jugadorEliminado)
}

class Jugador{
+nombre
+tanque
+victorias
+sumarVictoria()
}

class Juego{
+cantidadJugadores
+ArrayList<listaJugadores>
+cantidadPartidas
+ArrayList<listaPartidas>
+ArrayList<listaTanquesDisponibles>
+jugadorGanador
+juegoTerminado
+agregarJugador(i, pantalla)
+registroJugadores(director)
+agregarPartida(i, director)
+registroPartidas(director)
+definirGanador()
}

Class Proyectil{
+vivo
+balaImagen
+activaProyectil(coordenadasXY)
+sigueTrayectoria(coordenadasXY)
+redimensionaBala()
}

class Tanque{
+int x
+int y
+bloque
+modelo
+color
+ArrayList<disparoTrayectoria>
+bala
+disparar(pantalla)
+mostrarInformacion()
}

class Mapa{
+ancho
+alto
+pixel_y
+pixel_x
+ArrayList<listaBloques>
+blanco
+negro
+rojo
+verde
+azul
+marron
+azulClaro
+azulOscuro
+ArrayList<mapa>
+dibujar(pantalla)
}

class Escena{
+on_update()
+on_event(event)
+on_draw(screen)
}

class EscenaRegistro{
+on_update()
+on_event(evento)
+registrar()
+on_draw(pantalla)
+cambioEscenaJuego()
}

class EscenaMenu1{
+on_update()
+on_event()
+on_draw(screen)
}

class EscenaJuego{
+fondo
+mousex
+partidas
+piso
+mapa
+jugadorActual
+partidaActual
+ArrayList<trayectoria>
+angulo
+potencia
+contador
+flag
+jugadorEliminadoTurno
+on_update()
+on_event(event)
+n_draw(pantalla)
+dibujarBala()
+efectuarDisparo(ang, vel)
+cambiarJugador()
+colisionTierra(xDisparo, yDisparo)
+saleLimites(xDisparo, yDisparo)
+colisionTanque(xDisparo, yDisparo)
+dibujarTanques()
+mensajeTurno()
+mensajeFinPartida()
+mensajeFinJuego()
+muestreoVelocidadAngulo()
}

class EscenaHome{
+on_update()
+on_event(evento)
+on_draw(pantalla)
+cambioDePartida()
}

class Director{
+pantalla
+escena
+activadorDisparo
+running
+ArrayList<listaEscenas>
+mousePos
+iterador
+game
+gameLoop()
+cambiarEscena(escenaNueva)
+EscenaAux(EscenaAux)
+checaBoton(mousePos, botonNombre)
+terminoJuego()
}

class Boton{
+pantalla
+pantalla_rect
+int x
+int y
+color
+textColor
+fuente
+rect
+rect.center
+texto_image
+texto_imagerect
+tecto_image_rect.center
+preparaTexto(texto)
+dibujaBoton()
}

class Bloque{
+ancho
+alto
+int x
+int y
+color
+pantalla
+vivo
+dibujar()
+destruir()
+colision(xColision, yColision)
+setColor(color)
+getX()
+getY()
}


@enduml